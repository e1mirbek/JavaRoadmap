package collections.list;
import java.util.LinkedList;
import java.util.List;
import java.util.ArrayList;

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å List –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–π (Collections FrameWork) –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—É—é
// –∫–æ–ª–ª–µ–∫—Ü–∏—é —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –≥–¥–µ –º–æ–≥—É—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–∏—è.
// –Ø–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é –ø–∞–∫–µ—Ç–∞ java.util –∏ –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (Collections)


// üõ†Ô∏è –ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –º–µ—Ç–æ–¥—ã:
// | –ú–µ—Ç–æ–¥                 | –û–ø–∏—Å–∞–Ω–∏–µ                    |
//| --------------------- | --------------------------- |
//| `add(E e)`            | –î–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç           |
//| `add(int index, E e)` | –í—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É        |
//| `get(int index)`      | –ü–æ–ª—É—á–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É |
//| `remove(int index)`   | –£–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É  |
//| `set(int index, E e)` | –ó–∞–º–µ–Ω—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç            |
//| `contains(Object o)`  | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞  |
//| `size()`              | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–º–µ—Ä —Å–ø–∏—Å–∫–∞    |
//| `isEmpty()`           | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—É—Å—Ç–æ–π –ª–∏ —Å–ø–∏—Å–æ–∫ |


// –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å List?

// –ö–æ–≥–¥–∞ –≤–∞–∂–µ–Ω –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤

// –ö–æ–≥–¥–∞ –≤–æ–∑–º–æ–∂–Ω—ã –¥—É–±–ª–∏–∫–∞—Ç—ã

// –ö–æ–≥–¥–∞ –Ω—É–∂–µ–Ω –∏–Ω–¥–µ–∫—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø

// –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É ArrayList –∏ LinkedList
// –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, –∫–∞–∫ –æ–Ω–∏ —Ö—Ä–∞–Ω—è—Ç –¥–∞–Ω–Ω—ã–µ
// –∫–∞–∫ –±—ã—Å—Ç—Ä–æ –≤—ã–ø–æ–ª–Ω—è—é—Ç —Ä–∞–∑–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
// –û–Ω–∏ –æ–±–∞ —Ä–µ–∞–ª–∏–∑—É—é—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å List, –Ω–æ –∏–º–µ—é—Ç —Ä–∞–∑–Ω—É—é –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É.

// | –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ...                        | –í—ã–±–æ—Ä          |
//| ----------------------------------------- | -------------- |
//| –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –ø–æ –∏–Ω–¥–µ–∫—Å—É (`get`, `set`)  | ‚úÖ `ArrayList`  |
//| –ß–∞—Å—Ç—ã–µ –≤—Å—Ç–∞–≤–∫–∏/—É–¥–∞–ª–µ–Ω–∏—è –≤ –Ω–∞—á–∞–ª–µ/—Å–µ—Ä–µ–¥–∏–Ω–µ | ‚úÖ `LinkedList` |
//| –ú–µ–Ω—å—à–µ –ø–∞–º—è—Ç–∏                             | ‚úÖ `ArrayList`  |
//| –û—á–µ—Ä–µ–¥—å –∏–ª–∏ —Å—Ç–µ–∫ (FIFO / LIFO)            | ‚úÖ `LinkedList` |


// | –û–ø–µ—Ä–∞—Ü–∏—è               | `ArrayList` | `LinkedList` |
//| ---------------------- | ----------- | ------------ |
//| `get(index)`           | üî• –ë—ã—Å—Ç—Ä–æ   | üê¢ –ú–µ–¥–ª–µ–Ω–Ω–æ  |
//| `add(element)` –≤ –∫–æ–Ω–µ—Ü | üî• –ë—ã—Å—Ç—Ä–æ   | üî• –ë—ã—Å—Ç—Ä–æ    |
//| `add(index, element)`  | üê¢ –ú–µ–¥–ª–µ–Ω–Ω–æ | üî• –ë—ã—Å—Ç—Ä–æ    |
//| `remove(index)`        | üê¢ –ú–µ–¥–ª–µ–Ω–Ω–æ | üî• –ë—ã—Å—Ç—Ä–æ    |
//| –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏     | üëç –ú–µ–Ω—å—à–µ   | üëé –ë–æ–ª—å—à–µ    |




public class ListExample {
    public static void main(String[] args) {
        List <String> names = new ArrayList<>();
        names.add("Ahmet");
        names.add("Murat");

        List <Integer> numbersArrayList = new ArrayList<>();
        List <Integer> numbersLinkedList = new LinkedList<>();

        for (int i = 0; i < 100000; i++) {
            numbersArrayList.add(0, i);
            numbersLinkedList.add(0, i);
        }

        System.out.println(numbersLinkedList);
    }
}
