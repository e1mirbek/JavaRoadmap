package expressionsAndFunctionalProgramming.lambdaExpression;


// –õ—è–º–±–¥–∞-–≤—ã—Ä–∞–∂–µ–Ω–∏—è ‚Äî —ç—Ç–æ –∫–æ—Ä–æ—Ç–∫–∏–π —Å–ø–æ—Å–æ–± –∑–∞–ø–∏—Å–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–π –º–µ—Ç–æ–¥ (—Ñ—É–Ω–∫—Ü–∏—é),
// –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.

// üîπ –ü—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏:
//    –≠—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –±–µ–∑ –∏–º–µ–Ω–∏, –∫–æ—Ç–æ—Ä–∞—è –¥–µ–ª–∞–µ—Ç –∫–æ–¥ –∫–æ—Ä–æ—á–µ –∏ —á–∏—Ç–∞–µ–º–µ–µ,
//    –æ—Å–æ–±–µ–Ω–Ω–æ –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞–∫–æ–µ-—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ—Ç–æ–¥
//    (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ forEach, sort, filter –∏ —Ç. –¥.).

public class LambdaExample {
    public static void main(String[] args) {
        // –ª—è–º–¥–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Runnable
        Runnable runnable = () -> {
            System.out.println("–ü—Ä–∏–≤–µ—Ç –∏–∑ –ª—è–º–¥–∞ - –≤—ã—Ä–∞–∂–µ–Ω–∏—è");
        };

        new Thread(runnable).start();
    }
}
