package tasks.registration.infrastructure;

// ‚Üí —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (Map)

import tasks.registration.domain.User;
import tasks.registration.domain.UserRepository;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

// üìò –û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
//  –ú—ã —Å–¥–µ–ª–∞–ª–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ,
//  –∫–∞–∫ –±—É–¥—Ç–æ —ç—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.
//  –ß–∏—Å—Ç–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ—Ç–æ–º –Ω–∞ Mongo, PostgreSQL –∏ —Ç.–¥.

public class InMemoryUserRepository implements UserRepository {


    private final Map <String, User> storage = new HashMap<>();


    @Override
    public boolean save(User user) {

        if (existsByEmail(user.getEmail())) return false;
        storage.put(user.getEmail(), user);
        return true;

    }

    @Override
    public boolean existsByEmail(String email) {
        return storage.containsKey(email);
    }

    @Override
    public List<User> findAll() {
        return new ArrayList<>(storage.values());
    }

}
